{
  "id": 1,
  "experiment": {
    "param": {
      "num_al_iterations": 10,
      "adjust_K": true,
      "solver": {
        "flags": {
          "OutputFlag": 0
        },
        "type": "Gurobi.Optimizer"
      },
      "initial_pool_resample_version": 1,
      "initial_pools": [
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U",
        "U"
      ]
    },
    "model": {
      "fitted": {
        "model_params": {
          "C": 0.1,
          "subspaces": [
            [
              1,
              2
            ],
            [
              6,
              7
            ]
          ],
          "weight_update_strategy": null
        },
        "kernel": [
          "SquaredExponentialKernel(0.4305431903093962)",
          "SquaredExponentialKernel(0.4305431903093962)"
        ]
      },
      "param": {
        "subspaces": [
          [
            1,
            2
          ],
          [
            6,
            7
          ]
        ]
      },
      "init_strategy": "SimpleSubspaceStrategy(RuleOfThumbScott(), FixedCStrategy(0.1), Val{:Subspace}())",
      "type": "SubSVDD"
    },
    "data_set_name": "Dummy",
    "data_file": "example/dummy.csv",
    "output_file": "example/example_subspace_qs.json",
    "hash": 1,
    "split_strategy": {
      "query_strat": "FullSplitStrat",
      "test": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "test_strat": "FullSplitStrat",
      "train": [
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
      ],
      "train_strat": "FullSplitStrat"
    },
    "log_dir": "example/example_subspace_qs.log",
    "initial_pool_strategy_name": "Pu",
    "query_strategy": {
      "param": {
        "subspaces": [
          [
            1,
            2
          ],
          [
            6,
            7
          ]
        ]
      },
      "type": {
        "head": "curly",
        "args": [
          "SubspaceQs",
          "RandomPQs"
        ]
      }
    },
    "oracle": "PoolOracle",
    "split_strategy_name": "Sf"
  },
  "worker_info": {
    "git_commit": "xxx",
    "julia_version": "1.0.2",
    "hostname": "machine",
    "utc_time": "2018-01-01T12:00:00.000"
  },
  "data_stats": {
    "num_observations": 157,
    "train_fraction": 1.0,
    "num_dimensions": 13,
    "test_indices": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99,
      100,
      101,
      102,
      103,
      104,
      105,
      106,
      107,
      108,
      109,
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      118,
      119,
      120,
      121,
      122,
      123,
      124,
      125,
      126,
      127,
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157
    ],
    "train_indices": [
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9,
      10,
      11,
      12,
      13,
      14,
      15,
      16,
      17,
      18,
      19,
      20,
      21,
      22,
      23,
      24,
      25,
      26,
      27,
      28,
      29,
      30,
      31,
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41,
      42,
      43,
      44,
      45,
      46,
      47,
      48,
      49,
      50,
      51,
      52,
      53,
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      61,
      62,
      63,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83,
      84,
      85,
      86,
      87,
      88,
      89,
      90,
      91,
      92,
      93,
      94,
      95,
      96,
      97,
      98,
      99,
      100,
      101,
      102,
      103,
      104,
      105,
      106,
      107,
      108,
      109,
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      117,
      118,
      119,
      120,
      121,
      122,
      123,
      124,
      125,
      126,
      127,
      128,
      129,
      130,
      131,
      132,
      133,
      134,
      135,
      136,
      137,
      138,
      139,
      140,
      141,
      142,
      143,
      144,
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157
    ],
    "test_fraction": 1.0
  },
  "al_history": {
    "mv_itypes": {
      "f1_score": "Int64",
      "matthews_corr": "Int64",
      "tpr": "Int64",
      "mem_fit": "Int64",
      "fpr": "Int64",
      "mem_qs": "Int64",
      "cohens_kappa": "Int64",
      "query_label": "Int64",
      "time_fit": "Int64",
      "query_history": "Int64",
      "time_qs": "Int64",
      "time_set_data": "Int64",
      "cm": "Int64"
    },
    "mvhistory": {
      "f1_score": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806,
          0.06451612903225806
        ],
        "lastiter": 10
      },
      "matthews_corr": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757,
          -0.00600850731565757
        ],
        "lastiter": 10
      },
      "tpr": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285,
          0.14285714285714285
        ],
        "lastiter": 10
      },
      "mem_fit": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          1233491968,
          102462272,
          103592641,
          102462272,
          102470720,
          102462272,
          102462272,
          102462272,
          102470720,
          102462272,
          102462272
        ],
        "lastiter": 10
      },
      "fpr": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332,
          0.15333333333333332
        ],
        "lastiter": 10
      },
      "mem_qs": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "values": [
          14716843,
          3370006,
          16928,
          17072,
          17184,
          17408,
          17520,
          17664,
          17776,
          18064
        ],
        "lastiter": 9
      },
      "cohens_kappa": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495,
          -0.004855440300154495
        ],
        "lastiter": 10
      },
      "query_label": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "values": [
          "inlier",
          "inlier",
          "inlier",
          "inlier",
          "inlier",
          "inlier",
          "inlier",
          "inlier",
          "inlier",
          "inlier"
        ],
        "lastiter": 9
      },
      "time_fit": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          8.700262621,
          0.153479243,
          0.270371885,
          0.119919067,
          0.119905848,
          0.121868156,
          0.117833752,
          0.112806479,
          0.119613505,
          0.121252815,
          0.123926346
        ],
        "lastiter": 10
      },
      "query_history": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "values": [
          122,
          70,
          119,
          150,
          89,
          39,
          108,
          60,
          15,
          68
        ],
        "lastiter": 9
      },
      "time_qs": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "values": [
          0.200131826,
          0.052672057,
          3.9219e-5,
          3.7672e-5,
          3.6528e-5,
          5.0486e-5,
          4.9108e-5,
          3.4762e-5,
          3.6974e-5,
          5.2083e-5
        ],
        "lastiter": 9
      },
      "time_set_data": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          0.005357508,
          3.361e-6,
          3.412e-6,
          2.873e-6,
          2.858e-6,
          3.505e-6,
          3.639e-6,
          3.591e-6,
          2.467e-6,
          2.583e-6,
          2.706e-6
        ],
        "lastiter": 10
      },
      "cm": {
        "iterations": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "values": [
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          },
          {
            "tp": 1,
            "tn": 127,
            "fn": 6,
            "neg_class": "inlier",
            "pos_class": "outlier",
            "fp": 23
          }
        ],
        "lastiter": 10
      }
    },
    "mv_vtypes": {
      "f1_score": "Float64",
      "matthews_corr": "Float64",
      "tpr": "Float64",
      "mem_fit": "Int64",
      "fpr": "Float64",
      "mem_qs": "Int64",
      "cohens_kappa": "Float64",
      "query_label": "Symbol",
      "time_fit": "Float64",
      "query_history": "Int64",
      "time_qs": "Float64",
      "time_set_data": "Float64",
      "cm": "ConfusionMatrix"
    }
  },
  "al_summary": {
    "fpr": {
      "learning_stability": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "ratio_of_outlier_queries": 0.0,
      "average_gain": 0,
      "average_quality_change": 0.0,
      "start_quality": 0.15333333333333332,
      "quality_range": 0.0,
      "average_end_quality": [
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332,
        0.15333333333333332
      ],
      "total_quality_range": 0.0,
      "end_quality": 0.15333333333333332,
      "average_loss": 0,
      "ramp_up": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "maximum": 0.15333333333333332
    },
    "f1_score": {
      "learning_stability": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "ratio_of_outlier_queries": 0.0,
      "average_gain": 0,
      "average_quality_change": 0.0,
      "start_quality": 0.06451612903225806,
      "quality_range": 0.0,
      "average_end_quality": [
        0.06451612903225805,
        0.06451612903225805,
        0.06451612903225806,
        0.06451612903225806,
        0.06451612903225806,
        0.06451612903225806,
        0.06451612903225806,
        0.06451612903225806,
        0.06451612903225806,
        0.06451612903225806,
        0.06451612903225806
      ],
      "total_quality_range": 0.0,
      "end_quality": 0.06451612903225806,
      "average_loss": 0,
      "ramp_up": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "maximum": 0.06451612903225806
    },
    "runtime": {
      "time_exp": 23.435109095
    },
    "matthews_corr": {
      "learning_stability": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "ratio_of_outlier_queries": 0.0,
      "average_gain": 0,
      "average_quality_change": 0.0,
      "start_quality": -0.00600850731565757,
      "quality_range": 0.0,
      "average_end_quality": [
        -0.006008507315657571,
        -0.006008507315657571,
        -0.006008507315657571,
        -0.006008507315657571,
        -0.006008507315657571,
        -0.00600850731565757,
        -0.00600850731565757,
        -0.00600850731565757,
        -0.00600850731565757,
        -0.00600850731565757,
        -0.00600850731565757
      ],
      "total_quality_range": 0.0,
      "end_quality": -0.00600850731565757,
      "average_loss": 0,
      "ramp_up": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "maximum": -0.00600850731565757
    },
    "tpr": {
      "learning_stability": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "ratio_of_outlier_queries": 0.0,
      "average_gain": 0,
      "average_quality_change": 0.0,
      "start_quality": 0.14285714285714285,
      "quality_range": 0.0,
      "average_end_quality": [
        0.14285714285714282,
        0.14285714285714282,
        0.14285714285714282,
        0.14285714285714282,
        0.14285714285714282,
        0.14285714285714282,
        0.14285714285714285,
        0.14285714285714285,
        0.14285714285714285,
        0.14285714285714285,
        0.14285714285714285
      ],
      "total_quality_range": 0.0,
      "end_quality": 0.14285714285714285,
      "average_loss": 0,
      "ramp_up": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "maximum": 0.14285714285714285
    },
    "cohens_kappa": {
      "learning_stability": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "ratio_of_outlier_queries": 0.0,
      "average_gain": 0,
      "average_quality_change": 0.0,
      "start_quality": -0.004855440300154495,
      "quality_range": 0.0,
      "average_end_quality": [
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495,
        -0.004855440300154495
      ],
      "total_quality_range": 0.0,
      "end_quality": -0.004855440300154495,
      "average_loss": 0,
      "ramp_up": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
      ],
      "maximum": -0.004855440300154495
    }
  },
  "status": {
    "exit_code": "success"
  }
}
